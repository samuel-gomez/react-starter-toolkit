/* eslint-disable no-undef */

export const LIGHTHOUSE_THRESHOLDS = {
  performance: 80,
  accessibility: 80,
  'best-practices': 80,
  // the custom audit ("session-init") needs to be referenced so that the lighthouse-session-gatherer is run
  'session-init': 80,
};

export const LIGHTHOUSE_OPTIONS = {
  formFactor: 'desktop',
  screenEmulation: {
    mobile: false,
    disable: false,
    width: Cypress.config('viewportWidth'),
    height: Cypress.config('viewportHeight'),
    deviceScaleRatio: 1,
  },
  throttling: {
    rttMs: 40,
    throughputKbps: 11024,
    cpuSlowdownMultiplier: 1,
    requestLatencyMs: 0,
    downloadThroughputKbps: 0,
    uploadThroughputKbps: 0,
  },
  output: 'html',
  logLevel: 'info',
};

export const LIGHTHOUSE_CONFIG = {
  extends: 'lighthouse:default',
  disableStorageReset: true,
  passes: [
    {
      passName: 'defaultPass',
      gatherers: ['cypress/green-it/lighthouse/lighthouse-session-gatherer.mjs'],
      recordTrace: true,
      pauseAfterLoadMs: 1000,
      networkQuietThresholdMs: 1000,
      pauseAfterNetworkQuietMs: 1000,
    },
  ],
  audits: ['cypress/green-it/lighthouse/lighthouse-session-audit.mjs'], // our custom (dummy) audit
  categories: {
    'session-init': {
      name: 'Browser Session Init',
      title: 'Session Config',
      description: 'Confirm browser session initialized',
      auditRefs: [{ id: 'session-audit', weight: 1 }],
    },
    pauseAfterLoadMs: 1000,
  },
  settings: {},
};

export const LIGHTHOUSE_PATHS = {
  reportsPath: './cypress/reports/',
  lighthouseReportsPath: './cypress/reports/lighthouse/',
};

export const LIGHTHOUSE_REPORT_OPTIONS = {
  minifyHtmlReports: true,
  htmlMinifierOptions: {
    includeAutoGeneratedTags: true,
    removeAttributeQuotes: true,
    removeComments: true,
    removeRedundantAttributes: true,
    removeScriptTypeAttributes: true,
    removeStyleLinkTypeAttributes: true,
    sortClassName: true,
    useShortDoctype: true,
    collapseWhitespace: true,
    minifyCSS: true,
    minifyJS: true,
  },
};
